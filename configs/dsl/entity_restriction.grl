rule ApplyInitialEntityRestrictions "Apply entity restrictions" salience 10 {
    when
        User.EntityId.Len() > 0
    then
        Result.UpdateRestrictions(User.EntityId, User.Config.HasCryptoFiatAccount, SystemConfig.EntityRestrictions);
        Changed("Result.Value");
        Retract("ApplyInitialEntityRestrictions");
}

rule CaKycApprovedBeforeEffectiveTime "Canada KYC approved before effective time" salience 9 {
    when
        User.EntityId == "canada" &&
            SystemConfig.TimeLessThan("CaAppliedForKycApprovedAfter", User.KycDocument.AppliedAt) 
    then
        Result.UpdateRestrictionsWithAppliedAt(User.EntityId, SystemConfig.EntityRestrictions);
        Changed("Result.Value");
        Retract("CaKycApprovedBeforeEffectiveTime");
}

rule ApplyEntityRestrictionWithResidentialAddress "Apply entity restrictions with residential address" salience 8 {
    when
        User.ResidentialAddress.Len() > 0
    then
        Result.UpdateRestrictionsWithRequiredInfo(User.EntityId, "residential_address:submit", SystemConfig.EntityRestrictions);
        Changed("Result.Value");
        Retract("ApplyEntityRestrictionWithResidentialAddress");
}
